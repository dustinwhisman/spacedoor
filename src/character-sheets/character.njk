---
title: Character
layout: layouts/sidebar.njk
---

<div class="stack">
  <div data-character-sheet class="stack"></div>

  <h3>Special Equipment</h3>
  <p>
    This is the list of special equipment that you can use. Pick one at the
    start of each mission.
  </p>
  {% for class in classes %}
    <div data-equipment-class="{{ class.Name }}" class="stack" hidden>
      {% for item in class.equipment %}
        <div>
          <div class="stack" style="--stack-space: 0.5rem">
            <h4>
              {{ item.Name }}
            </h4>
            <p>
              {{ item.Description }}
            </p>
          </div>
        </div>
      {% endfor %}
    </div>
  {% endfor %}

  <h3>Weapons</h3>
  <p>
    These are the weapons that your character can use. Pick two (or more with
    certain feats) to use at the beginning of the mission.
  </p>
  {% for weapon in weapons %}
    <div data-weapon-modifier="{{ weapon.Modifier }}" data-required-weapon-bonus="{{ weapon['Required Bonus'] }}" hidden>
      <div class="stack" style="--stack-space: 0.5rem">
        <h4>
          {{ weapon.Name }}
        </h4>
        {% if weapon.Modifier %}
          <p>
            <small>
              +{{ weapon['Required Bonus'] }} {{ weapon.Modifier }}{% if weapon.Restrictions %}, {{ weapon.Restrictions }}{% endif %}
            </small>
          </p>
        {% endif %}
        <p>
          {{ weapon.Description }}
        </p>
        {% if weapon['Mixed Success Damage'] %}
          <ul>
            <li>
              Mixed Success Damage: {{ weapon['Mixed Success Damage'] }}
            </li>
            <li>
              Success Damage: {{ weapon['Success Damage'] }}
            </li>
            <li>
              Critical Success Damage: {{ weapon['Critical Success Damage'] }}
            </li>
          </ul>
        {% endif %}
      </div>
    </div>
  {% endfor %}

  <h3>Armor</h3>
  <p>
    These are the options for armor that your character is qualified to use.
    Choose one for each stat category to wear on your missions.
  </p>
  {% for armor in armors %}
    <div data-armor-modifier="{{ armor.Modifier }}" data-required-armor-bonus="{{ armor['Required Bonus'] }}" hidden>
      <div class="stack" style="--stack-space: 0.5rem">
        <h4>
          {{ armor.Name }}
        </h4>
        {% if armor.Modifier %}
          <p>
            <small>
              +{{ armor['Required Bonus'] }} {{ armor.Modifier }}
            </small>
          </p>
        {% endif %}
        <p>
          {{ armor.Description }}
        </p>
      </div>
    </div>
  {% endfor %}

  <h3>Feats</h3>
  <div data-feat-links class="stack"></div>
  <div data-feats class="stack"></div>
</div>

<script type="module">
  import { getFromDb, getAllFromDb } from '/scripts/db.mjs';

  let character;
  const getCharacter = async () => {
    const urlParams = new URLSearchParams(window.location.search);
    const key = urlParams.has('key') && urlParams.get('key');

    if (!key) {
      window.location.href = '/character-sheets';
    }

    character = await getFromDb('characters', key);

    const equipment = document.querySelectorAll(`[data-equipment-class="${character.class}"]`);
    equipment.forEach((item) => {
      item.removeAttribute('hidden');
    });

    const weapons = document.querySelectorAll('[data-weapon-modifier]');
    weapons.forEach((weapon) => {
      if (!weapon.dataset.weaponModifier) {
        weapon.removeAttribute('hidden');
        return;
      }

      if (character[weapon.dataset.weaponModifier.toLowerCase()] >= Number(weapon.dataset.requiredWeaponBonus)) {
        weapon.removeAttribute('hidden');
        return;
      }
    });

    const armors = document.querySelectorAll('[data-armor-modifier]');
    armors.forEach((armor) => {
      if (!armor.dataset.armorModifier) {
        armor.removeAttribute('hidden');
        return;
      }

      if (character[armor.dataset.armorModifier.toLowerCase()] >= Number(armor.dataset.requiredArmorBonus)) {
        armor.removeAttribute('hidden');
        return;
      }
    });

    const characterSheetTemplate = `
      <h2>${character.name}</h2>
      <div>
        <p>${character.race}</p>
        <p>${character.class}: ${character.subclass}</p>
        <p>Level ${character.level}</p>
      </div>
      <div>
        <p>Charm: ${character.charm}</p>
        <p>Cool: ${character.cool}</p>
        <p>Sharp: ${character.sharp}</p>
        <p>Tough: ${character.tough}</p>
        <p>Technobabble: ${character.technobabble}</p>
      </div>
      <div>
        <p>Health: ${character.currentHealth} / ${character.maxHealth}</p>
        <p>Stamina: ${character.currentStamina} / ${character.maxStamina}</p>
      </div>
      <div>
        <p>Experience: ${character.experience}</p>
        <p>Luck Points: ${character.luck}</p>
      </div>
    `;

    const sheetElement = document.querySelector(`[data-character-sheet]`);
    sheetElement.innerHTML = characterSheetTemplate;

    const featLinksTemplate = `
      <div>
        <a href="/races/${character.race.toLowerCase().replace(/\s/g, '-')}?key=${character.key}">Add Race Feats</a>
      </div>
      <div>
        <a href="/classes/${character.class.toLowerCase().replace(/\s/g, '-')}?key=${character.key}">Add Class Feats</a>
      </div>
      <div>
        <a href="/feats?key=${character.key}">Add General Feats</a>
      </div>
    `;

    const featLinksElement = document.querySelector('[data-feat-links]');
    featLinksElement.innerHTML = featLinksTemplate;

    const allFeats = await getAllFromDb('feats');
    const feats = allFeats.filter((feat) => feat.owner === key);

    const featsTemplate = feats.map((feat) => {
      return `
        <div>
          <h4>${feat.name}</h4>
          <p>
            <small>Level ${feat.level}</small>
          </p>
          <p>${feat.description}</p>
        </div>
      `;
    }).join('');

    const featsElement = document.querySelector('[data-feats]');
    featsElement.innerHTML = featsTemplate;
  };

  getCharacter();
</script>
