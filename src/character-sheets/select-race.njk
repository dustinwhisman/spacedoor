---
title: Select Race
layout: layouts/sidebar.njk
---

<div class="stack">
  <h2>
    Select Race
    <span data-character-name></span>
  </h2>
  <form id="selectRaceForm" class="stack">
    <div>
      <fieldset>
        <legend>
          Race
        </legend>
        <div class="stack">
          {% for race in races %}
            <div>
              <label class="custom-checkbox">
                <input id="{{ race.Name }}" type="radio" name="race" value="{{ race.Name }}" required>
                {% include "radio-svg.njk" %}
                <span>
                  {{ race.Name }}
                </span>
              </label>
              <p class="small indented">
                {{ race.Description }}
              </p>
            </div>
          {% endfor %}
        </div>
      </fieldset>
    </div>
    <div>
      <button type="submit" data-submit-button>
        Save and Continue
      </button>
    </div>
  </form>
</div>

<script type="module">
  import { getFromDb, addToDb } from '/scripts/db.mjs';

  let character;
  const getCharacter = async () => {
    const urlParams = new URLSearchParams(window.location.search);
    const key = urlParams.has('key') && urlParams.get('key');

    if (!key) {
      window.location.href = '/character-sheets/add-character';
    }

    character = await getFromDb('characters', key);
    const heading = document.querySelector('[data-character-name]');
    document.title = `Select Race – ${character.name} | Spacedoor`;
    heading.innerHTML = `– ${character.name}`;
    if (document.referrer.includes('/character-sheets/character')) {
      const radioButton = document.querySelector(`input[value="${character.race}"]`);
      radioButton.checked = true;
      const submitButton = document.querySelector('[data-submit-button]');
      submitButton.innerHTML = 'Save Changes';
    }
  };

  const updateCharacter = async (character) => {
    try {
      await addToDb('characters', character);
    } catch (error) {
      console.error(error);
    }
  };

  document.addEventListener('submit', (event) => {
    event.preventDefault();
    if (event.target.matches('#selectRaceForm')) {
      if (!character || !character.key) {
        return;
      }

      character.race = event.target.elements.race.value;
      updateCharacter(character);
    }
  });

  document.addEventListener('item-added', (event) => {
    const key = event.detail;
    if (document.referrer.includes('/character-sheets/character')) {
      window.location.href = `/character-sheets/character?key=${key}`;
    } else {
      window.location.href = `/character-sheets/select-class?key=${key}`;
    }
  });

  getCharacter();
</script>
