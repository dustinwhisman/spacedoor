---
title: Add Item to Inventory
layout: layouts/sidebar.njk
---

<div class="stack">
  <h2>
    Add Item to Inventory
    <span data-character-name></span>
  </h2>
  <form id="addItemForm" class="stack">
    <div>
      <label for="item-name">Item Name</label>
      <input id="item-name" type="text" name="item-name" autocapitalize="on" autofill="false" autocomplete="off" required>
    </div>
    <div>
      <label for="item-description">Description</label>
      <textarea id="item-description" name="item-description" autocapitalize="on" autofill="false" autocomplete="off" required></textarea>
    </div>
    <div>
      <button type="submit" data-submit-button>
        Save Item
      </button>
    </div>
  </form>
</div>

<script type="module">
  import { getFromDb, addToDb } from '/scripts/db.mjs';
  import { uuid } from '/scripts/db-utilities.mjs';

  let character;
  const getCharacter = async () => {
    const urlParams = new URLSearchParams(window.location.search);
    const key = urlParams.has('key') && urlParams.get('key');

    if (!key) {
      return;
    }

    character = await getFromDb('characters', key);

    const heading = document.querySelector('[data-character-name]');
    heading.innerHTML = `– ${character.name}`;
    document.title = `Add Item to Inventory – ${character.name} | Spacedoor`;
  };

  const updateCharacter = async (character) => {
    try {
      await addToDb('characters', character);
    } catch (error) {
      console.error(error);
    }
  };

  document.addEventListener('submit', (event) => {
    if (event.target.matches('#addItemForm')) {
      event.preventDefault();
      const name = event.target.elements['item-name'].value;
      const description = event.target.elements['item-description'].value;
      const itemKey = uuid();

      if (!character.inventory) {
        character.inventory = [{
          key: itemKey,
          name,
          description,
        }];
      } else {
        character.inventory.push({
          key: itemKey,
          name,
          description,
        });
      }

      updateCharacter(character);
    }
  });

  document.addEventListener('item-added', (event) => {
    const key = event.detail;
    window.location.href = `/character-sheets/character?key=${key}`;
  });

  getCharacter();

  document.addEventListener('user-logged-in', getCharacter);
</script>
