---
layout: layouts/sidebar.njk
pagination:
  data: classes
  size: 1
  alias: class
permalink: classes/{{ class.slug }}/index.html
renderData:
  title: "{{ class.Name }}"
---

<style>
  .hide-feats .class-feat {
    display: none;
  }

  .level-1 [data-level="1"] {
    display: block;
  }

  .level-6 [data-level="6"] {
    display: block;
  }

  .level-11 [data-level="11"] {
    display: block;
  }

  .level-16 [data-level="16"] {
    display: block;
  }
</style>

<div class="stack" data-class-root>
  <h2>
    {{ class.Name }}
  </h2>
  <p>
    {{ class.Description }}
  </p>
  <ul>
    <li>
      Primary Stat: {{ class['Primary Stat'] }}
    </li>
    <li>
      Secondary Stat: {{ class['Secondary Stat'] }}
    </li>
    <li>
      Penalty Stat: {{ class['Penalty'] }}
    </li>
  </ul>

  <h3>Subclasses</h3>
  <p>
    Choose a subclass for your character. Each subclass grants different
    abilities restrictions, or mechanics that will affect your playstyle. Here
    are the options for the {{ class.shorthand }} class.
  </p>

  {% for subclass in class.subclasses %}
    <div>
      <div class="stack" style="--stack-space: 0.5rem">
        <h4>
          {{ subclass.Name }}
        </h4>
        <p>
          {{ subclass.Description }}
        </p>
      </div>
    </div>
  {% endfor %}

  <h3>Special Equipment</h3>
  <p>
    Before each mission, choose special equipment that will help you on your
    way. You can swap out the special equipment between missions or if there is
    a valid story reason for resupplying.
  </p>

  {% for item in class.equipment %}
    <div>
      <div class="stack" style="--stack-space: 0.5rem">
        <h4>
          {{ item.Name }}
        </h4>
        <p>
          {{ item.Description }}
        </p>
      </div>
    </div>
  {% endfor %}

  <h3>Feats</h3>
  <p>
    As you level up, you can choose to take race feats, class feats, or
    <a href="/feats">general feats</a>. Below are the class feats for the
    {{ class.shorthand }}.
  </p>

  <fieldset>
    <legend>Filter by Level</legend>
    <div class="stack" style="--stack-space: 0.5rem">
      <div>
        <label class="custom-checkbox">
          <input id="level-1" type="checkbox" name="feat-level" value="level-1">
          {% include "checkbox-svg.njk" %}
          <span>Level 1</span>
        </label>
      </div>
      <div>
        <label class="custom-checkbox">
          <input id="level-6" type="checkbox" name="feat-level" value="level-6">
          {% include "checkbox-svg.njk" %}
          <span>Level 6</span>
        </label>
      </div>
      <div>
        <label class="custom-checkbox">
          <input id="level-11" type="checkbox" name="feat-level" value="level-11">
          {% include "checkbox-svg.njk" %}
          <span>Level 11</span>
        </label>
      </div>
      <div>
        <label class="custom-checkbox">
          <input id="level-16" type="checkbox" name="feat-level" value="level-16">
          {% include "checkbox-svg.njk" %}
          <span>Level 16</span>
        </label>
      </div>
    </div>
  </fieldset>

  {% for feat in class.feats %}
    <div class="class-feat" data-level="{{ feat.Level }}">
      <div class="stack" style="--stack-space: 0.5rem">
        <h4>
          {{ feat.Name }}
        </h4>
        <p>
          <small>
            Level {{ feat.Level }}
          </small>
        </p>
        <p>
          {{ feat.Description }}
        </p>
      </div>
    </div>
  {% endfor %}
</div>

<script>
  document.addEventListener('change', (event) => {
    const levelCheckboxes = document.querySelectorAll('[name=feat-level]');
    const areLevelsFiltered = Array.from(levelCheckboxes).some(x => x.checked);

    const classRoot = document.querySelector('[data-class-root]');

    if (areLevelsFiltered) {
      classRoot.classList.add('hide-feats');
    } else {
      classRoot.classList.remove('hide-feats');
    }

    if (!areLevelsFiltered) {
      classRoot.classList.add('any-level');
    } else {
      classRoot.classList.remove('any-level');
    }

    if (event.target.checked) {
      classRoot.classList.add(event.target.value);
    } else {
      classRoot.classList.remove(event.target.value);
    }
  });
</script>
