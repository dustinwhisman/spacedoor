---
layout: layouts/sidebar.njk
pagination:
  data: races
  size: 1
  alias: race
permalink: races/{{ race.slug }}/index.html
renderData:
  title: "{{ race.Name }}"
---

<div class="stack">
  <h2>
    {{ race.Name }}
  </h2>
  <p>
    {{ race.Description }}
  </p>

  <h3>
    Feats
  </h3>
  <p>
    As you level up, you can choose to take race feats, class feats, or
    <a href="/feats">general feats</a>. Below are the race feats for the
    {{ race.Name }} race.
  </p>

  {% for feat in race.feats %}
    <div>
      <div class="stack" style="--stack-space: 0.5rem">
        <h4>
          {{ feat.Name }}
        </h4>
        <p>
          <small>
            Level {{ feat.Level }}
          </small>
        </p>
        <p>
          {{ feat.Description }}
        </p>
        <div>
          <button type="button" class="small" data-add-feat data-race="{{ race.Name }}" data-level="{{ feat.Level }}" data-name="{{ feat.Name }}" data-description="{{ feat.Description }}" hidden>
            Take This Feat
          </button>
        </div>
      </div>
    </div>
  {% endfor %}
</div>

<script type="module">
  import { getFromDb, addToDb } from '/scripts/db.mjs';

  let character;
  const getCharacter = async () => {
    const urlParams = new URLSearchParams(window.location.search);
    const key = urlParams.has('key') && urlParams.get('key');

    if (!key) {
      return;
    }

    character = await getFromDb('characters', key);
    const selectableFeats = document.querySelectorAll(`[data-race="${character.race}"]`);
    selectableFeats.forEach((feat) => {
      const level = Number(feat.dataset.level);
      if (level <= character.level) {
        feat.removeAttribute('hidden');
      }
    });
  };

  const addFeat = async (feat) => {
    try {
      await addToDb('feats', feat);
    } catch (error) {
      console.error(error);
    }
  };

  document.addEventListener('click', (event) => {
    if (event.target.matches('[data-add-feat]')) {
      const feat = {
        owner: character.key,
        type: 'race',
        name: event.target.dataset.name,
        level: event.target.dataset.level,
        description: event.target.dataset.description,
      };

      addFeat(feat);
    }
  });

  document.addEventListener('item-added', () => {
    window.location.href = `/character-sheets/character?key=${character.key}`;
  });

  getCharacter();
</script>
